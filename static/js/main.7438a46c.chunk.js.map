{"version":3,"sources":["types.tsx","handlers.tsx","Navigator/Navigator.tsx","images/trip.jpg","ResultContainer/ResultContainer.tsx","images/travel.jpg","images/shippypro.svg","Information/Information.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AirportSelectorType","Airline","data","id","name","this","Airport","codeIata","latitude","longitude","Flight","airlineId","departureAirportId","arrivalAirportId","price","APIError","message","apiURL","auth","headers","process","getFlights","departureCode","arrivalCode","a","fetch","response","json","obj","map","f","getAllAirports","getAllAirlines","Navigator","airports","onSearchFlight","onAirportChange","airportOptions","airport","value","filterAirports","inputValue","option","toUpperCase","indexOf","Group","compact","style","boxShadow","borderRadius","padding","options","filterOption","onSelect","selectedOption","Origin","className","bordered","borderTopLeftRadius","borderBottomLeftRadius","height","borderRight","size","placeholder","Destination","type","onClick","Panel","Collapse","ResultContainer","flights","origin","destination","getAirlineName","getAirportCode","length","ghost","expandIconPosition","header","extra","reduce","p","c","toFixed","justify","align","xs","lg","Item","dot","color","src","trip","preview","sm","width","Information","airlines","Title","Typography","App","useState","isLoading","setIsLoading","setFlights","setAirports","setAirlines","setOrigin","setDestination","error","setError","useEffect","updateAirports","airportsData","updateAirlines","airlinesData","handleSearchFlight","textAlign","direction","logo","margin","travel","point","undefined","newAirport","find","Promise","resolve","setTimeout","indicator","LoadingOutlined","fontSize","spin","spinning","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7438a46c.chunk.js","sourcesContent":["export class Airline {\r\n  constructor(data: any) {\r\n    this.id = data.id;\r\n    this.name = data.name;\r\n  }\r\n\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport class Airport {\r\n  constructor(data: any) {\r\n    this.id = data.id;\r\n    this.codeIata = data.codeIata;\r\n    this.latitude = data.latitude;\r\n    this.longitude = data.longitude;\r\n  }\r\n\r\n  id: number;\r\n  codeIata: string;\r\n  latitude: string;\r\n  longitude: string;\r\n};\r\n\r\nexport class Flight {\r\n  constructor(data: any) {\r\n    this.id = data.id;\r\n    this.airlineId = data.airlineId;\r\n    this.departureAirportId = data.departureAirportId;\r\n    this.arrivalAirportId = data.arrivalAirportId;\r\n    this.price = data.price;\r\n  }\r\n\r\n  id: number;\r\n  airlineId: number;\r\n  departureAirportId: number;\r\n  arrivalAirportId: number;\r\n  price: number;\r\n};\r\n\r\nexport class APIError {\r\n  constructor(data: any) {\r\n    this.message = data.message;\r\n  }\r\n\r\n  message: string;\r\n}\r\n\r\nexport enum AirportSelectorType {\r\n  Origin,\r\n  Destination\r\n}","import { Airline, Airport, APIError, Flight } from \"./types\";\r\n\r\nconst apiURL = 'https://recruitment.shippypro.com/flight-engine/api';\r\n\r\nconst auth = {\r\n  headers: {\r\n    'Authorization': `Bearer ${process.env.REACT_APP_API_TOKEN}`\r\n  }\r\n};\r\n\r\nexport const getAllFlights = async (): Promise<Flight[] | APIError> => {\r\n  const response = await fetch(`${apiURL}/flights/all`, auth);\r\n  const obj = await response.json();\r\n  return obj.message ? new APIError(obj) : obj.data.map((f: Flight) => new Flight(f));\r\n}\r\n\r\nexport const getFlights = async (departureCode: string, arrivalCode: string): Promise<Flight[] | APIError> => {\r\n  const response = await fetch(`${apiURL}/flights/from/${departureCode}/to/${arrivalCode}`, auth);\r\n  const obj = await response.json();\r\n  return obj.message ? new APIError(obj) : obj.data.map((f: Flight) => new Flight(f));\r\n}\r\n\r\nexport const getAllAirports = async (): Promise<Airport[] | APIError> => {\r\n  const response = await fetch(`${apiURL}/airports/all`, auth);\r\n  const obj = await response.json();\r\n  return obj.message ? new APIError(obj) : obj.data.map((a: Airport) => new Airport(a));\r\n}\r\n\r\nexport const getAllAirlines = async (): Promise<Airline[] | APIError> => {\r\n  const response = await fetch(`${apiURL}/airlines/all`, auth);\r\n  const obj = await response.json();\r\n  return obj.message ? new APIError(obj) : obj.data.map((a: Airline) => new Airline(a));\r\n}","import React from 'react';\r\nimport '../App.less';\r\nimport { Input, Button, AutoComplete } from 'antd';\r\nimport { Airport, AirportSelectorType } from '../types';\r\n\r\ninterface INavigatorProps {\r\n  airports: Airport[],\r\n  onAirportChange: (selectedAirport: string, point: AirportSelectorType) => void,\r\n  onSearchFlight: () => any\r\n}\r\n\r\nfunction Navigator({ airports, onSearchFlight, onAirportChange }: INavigatorProps) {\r\n  const airportOptions = airports.map((airport: Airport) => {\r\n    return {\r\n      value: airport.codeIata\r\n    }\r\n  });\r\n\r\n  const filterAirports = (inputValue: string, option: any) => {\r\n    return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\r\n  }\r\n\r\n  return (\r\n    <Input.Group\r\n      compact\r\n      style={{\r\n        boxShadow: '0 4px 6px 0px rgba(0, 0, 0, 0.05), 0 0px 4px 0px rgba(0, 0, 0, 0.05)',\r\n        borderRadius: '20px',\r\n        padding: '5px'\r\n      }}\r\n    >\r\n      <AutoComplete\r\n        options={airportOptions}\r\n        filterOption={(inputValue, option) => filterAirports(inputValue, option)}\r\n        onSelect={(selectedOption) => onAirportChange(selectedOption, AirportSelectorType.Origin)}\r\n        className=\"navigator__input\"\r\n      >\r\n        <Input\r\n          bordered={false}\r\n          style={{\r\n            borderTopLeftRadius: '20px',\r\n            borderBottomLeftRadius: '20px',\r\n            height: '50px',\r\n            borderRight: '1px solid #EFF3F7'\r\n          }}\r\n          size=\"large\"\r\n          placeholder=\"Flying from...\"\r\n        />\r\n      </AutoComplete>\r\n      <AutoComplete\r\n        className=\"navigator__input\"\r\n        options={airportOptions}\r\n        filterOption={(inputValue, option) => filterAirports(inputValue, option)}\r\n        onSelect={(selectedOption) => onAirportChange(selectedOption, AirportSelectorType.Destination)}\r\n      >\r\n        <Input\r\n          bordered={false}\r\n          style={{height: '50px'}}\r\n          size=\"large\"\r\n          placeholder=\"Flying to...\"\r\n        />\r\n      </AutoComplete>\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        className=\"cta navigator__button\"\r\n        style={{\r\n          borderRadius: '20px'\r\n        }}\r\n        onClick={onSearchFlight}\r\n      >\r\n        Find Options\r\n      </Button>\r\n    </Input.Group>\r\n  );\r\n}\r\n\r\nexport default Navigator;\r\n","export default __webpack_public_path__ + \"static/media/trip.06482898.jpg\";","import React from 'react';\r\nimport '../App.less';\r\nimport { Button, Col, Collapse, Row, Timeline, Image } from 'antd';\r\nimport { Airport, Flight } from '../types';\r\nimport { IoIosAirplane } from 'react-icons/io';\r\nimport trip from '../images/trip.jpg';\r\n\r\nconst { Panel } = Collapse;\r\n\r\ninterface IResultContainerProps {\r\n  origin: Airport,\r\n  destination: Airport,\r\n  flights: Flight[],\r\n  getAirlineName: (id: number) => string,\r\n  getAirportCode: (id: number) => string\r\n}\r\n\r\nfunction ResultContainer({ flights, origin, destination, getAirlineName, getAirportCode }: IResultContainerProps) {\r\n\r\n  if (flights.length === 0) {\r\n    return (\r\n      <>\r\n        Oh, no! It looks like there are not flights departing from <b className=\"text--bold\">{origin.codeIata}</b> and going to <b className=\"text--bold\">{destination.codeIata}</b>.\r\n      </>\r\n    );\r\n  }\r\n\r\n  else {\r\n    const renderFlight = (f: Flight) => (\r\n      <>\r\n        <Timeline.Item\r\n          dot={<IoIosAirplane />}\r\n          color=\"gray\"\r\n          className=\"timeline__item--airline\"\r\n        >\r\n          { getAirlineName(f.airlineId) }\r\n        </Timeline.Item>\r\n        <Timeline.Item>{ getAirportCode(f.arrivalAirportId) }</Timeline.Item>\r\n      </>\r\n    );\r\n    return (\r\n      <Collapse\r\n        ghost\r\n        expandIconPosition=\"right\"\r\n      >\r\n        <Panel\r\n          key=\"1\"\r\n          header={`${origin.codeIata} — ${destination.codeIata}`}\r\n          extra={`€${flights.reduce((p, c) => p + c.price, 0).toFixed(0)}`}\r\n        >\r\n          <Row justify=\"space-between\" align=\"middle\">\r\n            <Col xs={24} lg={12}>\r\n              <Timeline>\r\n                <Timeline.Item>{ origin.codeIata }</Timeline.Item>\r\n                { flights.map(renderFlight) }\r\n              </Timeline>\r\n            </Col>\r\n            <Col xs={24} lg={8}>\r\n              <Image\r\n                src={trip}\r\n                className=\"hero-picture\"\r\n                preview={false}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"end\">\r\n            <Col sm={24} lg={8}>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                className=\"cta purchase-button\"\r\n                style={{ width: '100%' }}\r\n                onClick={() => {}}\r\n              >\r\n                Purchase\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Panel>\r\n      </Collapse>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultContainer;\r\n","export default __webpack_public_path__ + \"static/media/travel.6761cf94.jpg\";","export default __webpack_public_path__ + \"static/media/shippypro.8f6655a9.svg\";","import React from 'react';\r\nimport '../App.less';\r\nimport { Airline} from '../types';\r\n\r\ninterface IInformationProps {\r\n  airlines: Airline[]\r\n}\r\n\r\nfunction Information({ airlines }: IInformationProps) {\r\n  return (\r\n    <>\r\n      ShippyPro has partnered up with <b className=\"text--bold\">{airlines.length}</b> airlines to provide you with the best prices out there.<br />\r\n      Start by choosing the city you are flying from and the city you want to fly to.\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.less';\nimport { getAllAirlines, getAllAirports, getFlights } from './handlers';\nimport { Airline, Airport, AirportSelectorType, Flight } from './types';\nimport Navigator from \"./Navigator/Navigator\";\nimport { Card, Image, Col, Row, Space, Typography, Spin } from 'antd';\nimport ResultContainer from './ResultContainer/ResultContainer';\nimport travel from './images/travel.jpg';\nimport logo from './images/shippypro.svg';\nimport Information from './Information/Information';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [flights, setFlights] = useState<Flight[]>();\n  const [airports, setAirports] = useState<Airport[]>([]);\n  const [airlines, setAirlines] = useState<Airline[]>([]);\n  const [origin, setOrigin] = useState<Airport>();\n  const [destination, setDestination] = useState<Airport>();\n  const [error, setError] = useState<string>();\n\n  useEffect(() => {\n    const updateAirports = async () => {\n      const airportsData = await getAllAirports();\n      \"message\" in airportsData ? setError(airportsData.message) : setAirports(airportsData);\n    }\n  \n    const updateAirlines = async () => {\n      const airlinesData = await getAllAirlines();\n      \"message\" in airlinesData ? setError(airlinesData.message) : setAirlines(airlinesData);\n    }\n\n    if (airports.length === 0) {\n      updateAirports();\n    }\n\n    if (airlines.length === 0) {\n      updateAirlines();\n    }\n\n    setIsLoading(false);\n  }, [airlines, airports]);\n\n  const handleSearchFlight = async () => {\n    setIsLoading(true);\n    const flights = await getFlights(origin!.codeIata, destination!.codeIata);\n    \"message\" in flights ? setError(flights.message) : setFlights(flights);\n    setIsLoading(false);\n  }\n\n  const handleAirportChange = (airport: string, point: AirportSelectorType) => {\n    setIsLoading(true);\n    setFlights(undefined);\n    const newAirport = airports!.find((a) => a.codeIata === airport);\n    point === AirportSelectorType.Origin ? setOrigin(newAirport): setDestination(newAirport);\n    new Promise(resolve => setTimeout(resolve, 1000));\n    setIsLoading(false);\n  }\n\n  const getAirportCode = (id: number) => {\n    return airports.find((a) => a.id === id)!.codeIata;\n  }\n\n  const getAirlineName = (id: number) => {\n    return airlines.find((a) => a.id === id)!.name;\n  }\n\n  if (error) {\n    return (\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{ textAlign: \"center\" }}\n      >\n        <Col xs={20}>\n          <Title>Oh no, something went wrong!</Title>\n        </Col>\n        <Col xs={20}>\n          <p>{error}</p>\n        </Col>\n      </Row>\n    )\n  }\n  \n  return (\n    <>\n      <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n        <Row align=\"middle\" justify=\"center\">\n          <Col xs={20} lg={6}>\n            <Image preview={false} src={logo} className=\"logo\" />\n            <Title id=\"title\" style={{ margin: 0 }}>\n              Let the journey begin.\n            </Title >\n          </Col>\n          <Col sm={10} lg={4}>\n            <Image\n              src={travel}\n              className=\"hero-picture\"\n              preview={false}\n            />\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col xs={20} lg={10}>\n            <Navigator\n              airports={airports}\n              onAirportChange={handleAirportChange}\n              onSearchFlight={handleSearchFlight}\n            />\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col xs={20} lg={10}>\n            <Card\n              bordered={false}\n              style={{\n                boxShadow: '0 4px 6px 0px rgba(0, 0, 0, 0.05), 0 0px 4px 0px rgba(0, 0, 0, 0.05)',\n                borderRadius: '20px'\n              }}\n            >\n              <Spin\n                indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\n                spinning={isLoading}\n              >\n                { \n                  (!flights && <Information airlines={airlines} />) ||\n                  (!isLoading && (\n                    <ResultContainer\n                      getAirlineName={getAirlineName}\n                      getAirportCode={getAirportCode}\n                      origin={origin!}\n                      destination={destination!}\n                      flights={flights!}\n                    />\n                  ))\n                }\n              </Spin> \n            </Card>\n          </Col>\n        </Row>\n      </Space>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}